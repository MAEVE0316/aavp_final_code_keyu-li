//Footage2 from Re-re-present Consciousness,Keyu Li,2024: 00:15ï¼›
//synthesizes audio by blending three separate noise signals, 
//each generated by a different noise oscillator. 
//These signals are individually scaled down to maintain a 
//manageable volume level before being mixed together. 
//generates a visual noise effect 
//by randomly altering the color values of each pixel across the entire display area. 
//This results in a constantly changing visual pattern that never repeats, 
//with each pixel cycling through random colors. 

#include "ofApp.h"

//--------------------------------------------------------------
void ofApp::setup() {
    ofBackground(0);
    bufferSize = 512;

    int sampleRate = 44100;
    ofxMaxiSettings::setup(sampleRate, 2, bufferSize);

    videoPixels.allocate(ofGetWidth(), ofGetHeight(), OF_PIXELS_RGB);
    texture.allocate(videoPixels);
    
    ofSoundStreamSettings settings;
    settings.setOutListener(this);
    settings.sampleRate = sampleRate;
    settings.numOutputChannels = 2;
    settings.numInputChannels = 0;
    settings.bufferSize = bufferSize;
    soundStream.setup(settings);
}

//--------------------------------------------------------------
void ofApp::audioOut(ofSoundBuffer &output) {
    for (int i = 0; i < output.getNumFrames(); ++i) {
        float noise1 = noiseOsc1.noise() * 0.3;
        float noise2 = noiseOsc2.noise() * 0.3;
        float noise3 = noiseOsc3.noise() * 0.3;
        float mixedNoise = noise1 + noise2 + noise3;

        output[i * output.getNumChannels()] = mixedNoise; 
        output[i * output.getNumChannels() + 1] = mixedNoise; 
    }
}

//--------------------------------------------------------------
void ofApp::update() {
    for (int y = 0; y < videoPixels.getHeight(); y++) {
        for (int x = 0; x < videoPixels.getWidth(); x++) {
            videoPixels.setColor(x, y, ofColor(ofRandom(255), ofRandom(255), ofRandom(255)));
        }
    }
    texture.loadData(videoPixels);
}


//--------------------------------------------------------------
void ofApp::draw() {
    texture.draw(0, 0, ofGetWidth(), ofGetHeight());
}


//--------------------------------------------------------------

void ofApp::exit() {
    soundStream.close();
}

//--------------------------------------------------------------
void ofApp::keyPressed(int key){

}

//--------------------------------------------------------------
void ofApp::keyReleased(int key){

}

//--------------------------------------------------------------
void ofApp::mouseMoved(int x, int y ){

}

//--------------------------------------------------------------
void ofApp::mouseDragged(int x, int y, int button){

}

//--------------------------------------------------------------
void ofApp::mousePressed(int x, int y, int button){

}

//--------------------------------------------------------------
void ofApp::mouseReleased(int x, int y, int button){

}

//--------------------------------------------------------------
void ofApp::mouseScrolled(int x, int y, float scrollX, float scrollY){

}

//--------------------------------------------------------------
void ofApp::mouseEntered(int x, int y){

}

//--------------------------------------------------------------
void ofApp::mouseExited(int x, int y){

}

//--------------------------------------------------------------
void ofApp::windowResized(int w, int h){

}

//--------------------------------------------------------------
void ofApp::gotMessage(ofMessage msg){

}

//--------------------------------------------------------------
void ofApp::dragEvent(ofDragInfo dragInfo){ 

}
